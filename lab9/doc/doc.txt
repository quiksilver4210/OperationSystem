Задание 2:
==3218== Helgrind, a thread error detector
==3218== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==3218== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3218== Command: ./main-race
==3218==
==3218== ---Thread-Announcement------------------------------------------
==3218==
==3218== Thread #1 is the program's root thread
==3218==
==3218== ---Thread-Announcement------------------------------------------
==3218==
==3218== Thread #2 was created
==3218==    at 0x49B40F2: clone (clone.S:71)
==3218==    by 0x48772EB: create_thread (createthread.c:101)
==3218==    by 0x4878E0F: pthread_create@@GLIBC_2.2.5 (pthread_create.c:817)
==3218==    by 0x4842917: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==3218==    by 0x109533: Pthread_create (mythreads.h:51)
==3218==    by 0x109611: main (main-race.c:19)
==3218==
==3218== ----------------------------------------------------------------
==3218==
==3218== Possible data race during read of size 4 at 0x10C040 by thread #1
==3218== Locks held: none
==3218==    at 0x109612: main (main-race.c:21)
==3218==
==3218== This conflicts with a previous write of size 4 by thread #2
==3218== Locks held: none
==3218==    at 0x1095C6: worker (main-race.c:10)
==3218==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==3218==    by 0x4878608: start_thread (pthread_create.c:477)
==3218==    by 0x49B4102: clone (clone.S:95)
==3218==  Address 0x10c040 is 0 bytes inside data symbol "balance"
==3218==
==3218== ----------------------------------------------------------------
==3218==
==3218== Possible data race during write of size 4 at 0x10C040 by thread #1
==3218== Locks held: none
==3218==    at 0x10961B: main (main-race.c:21)
==3218==
==3218== This conflicts with a previous write of size 4 by thread #2
==3218== Locks held: none
==3218==    at 0x1095C6: worker (main-race.c:10)
==3218==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==3218==    by 0x4878608: start_thread (pthread_create.c:477)
==3218==    by 0x49B4102: clone (clone.S:95)
==3218==  Address 0x10c040 is 0 bytes inside data symbol "balance"
==3218==
2==3218==
==3218== Use --history-level=approx or =none to gain increased speed, at
==3218== the cost of reduced accuracy of conflicting-access information
==3218== For lists of detected and suppressed errors, rerun with: -s
==3218== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


Исправить ошибку можно воспользовавшись мьютексами:
    pthread_mutex_lock(&mutex);
    balance++;
    pthread_mutex_unlock(&mutex);

Задание 3:
==4315== Helgrind, a thread error detector
==4315== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==4315== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==4315== Command: ./main-deadlock
==4315==
==4315== ---Thread-Announcement------------------------------------------
==4315==
==4315== Thread #3 was created
==4315==    at 0x49B40F2: clone (clone.S:71)
==4315==    by 0x48772EB: create_thread (createthread.c:101)
==4315==    by 0x4878E0F: pthread_create@@GLIBC_2.2.5 (pthread_create.c:817)
==4315==    by 0x4842917: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4315==    by 0x109513: Pthread_create (mythreads.h:51)
==4315==    by 0x109654: main (main-deadlock.c:24)
==4315==
==4315== ----------------------------------------------------------------
==4315==
==4315== Thread #3: lock order "0x10C040 before 0x10C080" violated
==4315==
==4315== Observed (incorrect) order is: acquisition of lock at 0x10C080
==4315==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4315==    by 0x109382: Pthread_mutex_lock (mythreads.h:23)
==4315==    by 0x1095CD: worker (main-deadlock.c:13)
==4315==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4315==    by 0x4878608: start_thread (pthread_create.c:477)
==4315==    by 0x49B4102: clone (clone.S:95)
==4315==
==4315==  followed by a later acquisition of lock at 0x10C040
==4315==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4315==    by 0x109382: Pthread_mutex_lock (mythreads.h:23)
==4315==    by 0x1095D9: worker (main-deadlock.c:14)
==4315==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4315==    by 0x4878608: start_thread (pthread_create.c:477)
==4315==    by 0x49B4102: clone (clone.S:95)
==4315==
==4315== Required order was established by acquisition of lock at 0x10C040
==4315==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4315==    by 0x109382: Pthread_mutex_lock (mythreads.h:23)
==4315==    by 0x1095B3: worker (main-deadlock.c:10)
==4315==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4315==    by 0x4878608: start_thread (pthread_create.c:477)
==4315==    by 0x49B4102: clone (clone.S:95)
==4315==
==4315==  followed by a later acquisition of lock at 0x10C080
==4315==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4315==    by 0x109382: Pthread_mutex_lock (mythreads.h:23)
==4315==    by 0x1095BF: worker (main-deadlock.c:11)
==4315==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4315==    by 0x4878608: start_thread (pthread_create.c:477)
==4315==    by 0x49B4102: clone (clone.S:95)
==4315==
==4315==  Lock at 0x10C040 was first observed
==4315==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4315==    by 0x109382: Pthread_mutex_lock (mythreads.h:23)
==4315==    by 0x1095B3: worker (main-deadlock.c:10)
==4315==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4315==    by 0x4878608: start_thread (pthread_create.c:477)
==4315==    by 0x49B4102: clone (clone.S:95)
==4315==  Address 0x10c040 is 0 bytes inside data symbol "m1"
==4315==
==4315==  Lock at 0x10C080 was first observed
==4315==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4315==    by 0x109382: Pthread_mutex_lock (mythreads.h:23)
==4315==    by 0x1095BF: worker (main-deadlock.c:11)
==4315==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4315==    by 0x4878608: start_thread (pthread_create.c:477)
==4315==    by 0x49B4102: clone (clone.S:95)
==4315==  Address 0x10c080 is 0 bytes inside data symbol "m2"
==4315==
==4315==
==4315==
==4315== Use --history-level=approx or =none to gain increased speed, at
==4315== the cost of reduced accuracy of conflicting-access information
==4315== For lists of detected and suppressed errors, rerun with: -s
==4315== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 7 from 7)

Из отчета можно сделать вывод, что у нас неправильный порядок блокировки
Задание 4:

==4355== Helgrind, a thread error detector
==4355== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==4355== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==4355== Command: ./main-deadlock-global
==4355==
==4355== ---Thread-Announcement------------------------------------------
==4355==
==4355== Thread #3 was created
==4355==    at 0x49B40F2: clone (clone.S:71)
==4355==    by 0x48772EB: create_thread (createthread.c:101)
==4355==    by 0x4878E0F: pthread_create@@GLIBC_2.2.5 (pthread_create.c:817)
==4355==    by 0x4842917: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4355==    by 0x109513: Pthread_create (mythreads.h:51)
==4355==    by 0x10966C: main (main-deadlock-global.c:27)
==4355==
==4355== ----------------------------------------------------------------
==4355==
==4355== Thread #3: lock order "0x10C080 before 0x10C0C0" violated
==4355==
==4355== Observed (incorrect) order is: acquisition of lock at 0x10C0C0
==4355==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4355==    by 0x109382: Pthread_mutex_lock (mythreads.h:23)
==4355==    by 0x1095D9: worker (main-deadlock-global.c:15)
==4355==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4355==    by 0x4878608: start_thread (pthread_create.c:477)
==4355==    by 0x49B4102: clone (clone.S:95)
==4355==
==4355==  followed by a later acquisition of lock at 0x10C080
==4355==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4355==    by 0x109382: Pthread_mutex_lock (mythreads.h:23)
==4355==    by 0x1095E5: worker (main-deadlock-global.c:16)
==4355==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4355==    by 0x4878608: start_thread (pthread_create.c:477)
==4355==    by 0x49B4102: clone (clone.S:95)
==4355==
==4355== Required order was established by acquisition of lock at 0x10C080
==4355==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4355==    by 0x109382: Pthread_mutex_lock (mythreads.h:23)
==4355==    by 0x1095BF: worker (main-deadlock-global.c:12)
==4355==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4355==    by 0x4878608: start_thread (pthread_create.c:477)
==4355==    by 0x49B4102: clone (clone.S:95)
==4355==
==4355==  followed by a later acquisition of lock at 0x10C0C0
==4355==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4355==    by 0x109382: Pthread_mutex_lock (mythreads.h:23)
==4355==    by 0x1095CB: worker (main-deadlock-global.c:13)
==4355==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4355==    by 0x4878608: start_thread (pthread_create.c:477)
==4355==    by 0x49B4102: clone (clone.S:95)
==4355==
==4355==  Lock at 0x10C080 was first observed
==4355==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4355==    by 0x109382: Pthread_mutex_lock (mythreads.h:23)
==4355==    by 0x1095BF: worker (main-deadlock-global.c:12)
==4355==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4355==    by 0x4878608: start_thread (pthread_create.c:477)
==4355==    by 0x49B4102: clone (clone.S:95)
==4355==  Address 0x10c080 is 0 bytes inside data symbol "m1"
==4355==
==4355==  Lock at 0x10C0C0 was first observed
==4355==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4355==    by 0x109382: Pthread_mutex_lock (mythreads.h:23)
==4355==    by 0x1095CB: worker (main-deadlock-global.c:13)
==4355==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4355==    by 0x4878608: start_thread (pthread_create.c:477)
==4355==    by 0x49B4102: clone (clone.S:95)
==4355==  Address 0x10c0c0 is 0 bytes inside data symbol "m2"
==4355==
==4355==
==4355==
==4355== Use --history-level=approx or =none to gain increased speed, at
==4355== the cost of reduced accuracy of conflicting-access information
==4355== For lists of detected and suppressed errors, rerun with: -s
==4355== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 7 from 7)

Отчет аналогичен предыдущему, однако благодаря глобальной блокировки этого не происходит

Задание 5:
==4685== Helgrind, a thread error detector
==4685== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==4685== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==4685== Command: ./main-signal
==4685==
this should print first
==4685== ---Thread-Announcement------------------------------------------
==4685==
==4685== Thread #1 is the program's root thread
==4685==
==4685== ---Thread-Announcement------------------------------------------
==4685==
==4685== Thread #2 was created
==4685==    at 0x49B40F2: clone (clone.S:71)
==4685==    by 0x48772EB: create_thread (createthread.c:101)
==4685==    by 0x4878E0F: pthread_create@@GLIBC_2.2.5 (pthread_create.c:817)
==4685==    by 0x4842917: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4685==    by 0x109533: Pthread_create (mythreads.h:51)
==4685==    by 0x10961C: main (main-signal.c:15)
==4685==
==4685== ----------------------------------------------------------------
==4685==
==4685== Possible data race during read of size 4 at 0x10C014 by thread #1
==4685== Locks held: none
==4685==    at 0x10961E: main (main-signal.c:16)
==4685==
==4685== This conflicts with a previous write of size 4 by thread #2
==4685== Locks held: none
==4685==    at 0x1095CD: worker (main-signal.c:9)
==4685==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4685==    by 0x4878608: start_thread (pthread_create.c:477)
==4685==    by 0x49B4102: clone (clone.S:95)
==4685==  Address 0x10c014 is 0 bytes inside data symbol "done"
==4685==
==4685== ----------------------------------------------------------------
==4685==
==4685== Possible data race during write of size 1 at 0x52881A5 by thread #1
==4685== Locks held: none
==4685==    at 0x48488A6: mempcpy (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4685==    by 0x49247B1: _IO_new_file_xsputn (fileops.c:1236)
==4685==    by 0x49247B1: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1197)
==4685==    by 0x4919677: puts (ioputs.c:40)
==4685==    by 0x109633: main (main-signal.c:18)
==4685==  Address 0x52881a5 is 21 bytes inside a block of size 1,024 alloc'd
==4685==    at 0x483C893: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4685==    by 0x4916E83: _IO_file_doallocate (filedoalloc.c:101)
==4685==    by 0x492704F: _IO_doallocbuf (genops.c:347)
==4685==    by 0x49260AF: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:745)
==4685==    by 0x4924834: _IO_new_file_xsputn (fileops.c:1244)
==4685==    by 0x4924834: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1197)
==4685==    by 0x4919677: puts (ioputs.c:40)
==4685==    by 0x1095CC: worker (main-signal.c:8)
==4685==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==4685==    by 0x4878608: start_thread (pthread_create.c:477)
==4685==    by 0x49B4102: clone (clone.S:95)
==4685==  Block was alloc'd by thread #2
==4685==
this should print last
==4685==
==4685== Use --history-level=approx or =none to gain increased speed, at
==4685== the cost of reduced accuracy of conflicting-access information
==4685== For lists of detected and suppressed errors, rerun with: -s
==4685== ERROR SUMMARY: 23 errors from 2 contexts (suppressed: 40 from 36)

Helgrind сообщает о возможной data race для переменной done.
Данный способ ожидания потока не является эффективным, так как процессор задействуется в ожидающем потоке


Задание 6:
==4857== Helgrind, a thread error detector
==4857== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==4857== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==4857== Command: ./main-signal-cv
==4857==
this should print first
this should print last
==4857==
==4857== Use --history-level=approx or =none to gain increased speed, at
==4857== the cost of reduced accuracy of conflicting-access information
==4857== For lists of detected and suppressed errors, rerun with: -s
==4857== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 7 from 7)

Этот способ эффективнее, так как ожидающий поток ожидает поступление сигнала
